/*
 * SearchBox.java
 *
 * Created on January 13, 2007, 5:26 AM
 */

package hoipolloi;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

/**
 * Shows a search box for searching the HP database.
 * 
 * This was made and visually designed in Netbeans.
 *
 * @author  Brandon Tanner
 * @version 1.0
 */
public class SearchBox extends javax.swing.JFrame implements ActionListener {
    
    private MainMenu parent;
    
    /**
     * Creates new form SearchBox
     */
    public SearchBox(MainMenu parent) {
        this.parent = parent;
        initComponents();
        this.searchQuery.addKeyListener(new SearchQueryListener());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        searchQuery = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnSearch.addActionListener(this);
        jPanel2 = new javax.swing.JPanel();
        checkFirstName = new javax.swing.JCheckBox();
        checkLastName = new javax.swing.JCheckBox();
        checkNickName = new javax.swing.JCheckBox();
        checkDescription = new javax.swing.JCheckBox();
        checkContacts = new javax.swing.JCheckBox();
        checkAddresses = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Find Someone");
        setAlwaysOnTop(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        setLocationByPlatform(true);
        setName("frmSearchBox");
        setResizable(false);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Search the Database"));
        jLabel1.setText("Search Query:");

        btnSearch.setText("Search");
        btnSearch.setToolTipText("Perform a Text Search");
        btnSearch.setNextFocusableComponent(checkFirstName);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(searchQuery, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 236, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnSearch, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(searchQuery, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnSearch))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search In"));
        checkFirstName.setSelected(true);
        checkFirstName.setText("First Name");
        checkFirstName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkFirstName.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkLastName.setSelected(true);
        checkLastName.setText("Last Name");
        checkLastName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkLastName.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkNickName.setSelected(true);
        checkNickName.setText("Nick Name");
        checkNickName.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkNickName.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkDescription.setSelected(true);
        checkDescription.setText("Description");
        checkDescription.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkDescription.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkContacts.setSelected(true);
        checkContacts.setText("Contacts");
        checkContacts.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkContacts.setMargin(new java.awt.Insets(0, 0, 0, 0));

        checkAddresses.setSelected(true);
        checkAddresses.setText("Addresses");
        checkAddresses.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        checkAddresses.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(checkFirstName)
                    .add(checkLastName))
                .add(42, 42, 42)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(checkNickName)
                    .add(checkDescription))
                .add(33, 33, 33)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(checkContacts)
                    .add(checkAddresses))
                .add(55, 55, 55))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(checkContacts)
                    .add(checkNickName)
                    .add(checkFirstName))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 16, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(checkAddresses)
                    .add(checkDescription)
                    .add(checkLastName))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    public void actionPerformed(ActionEvent event) {
        AbstractButton pressedButton = (AbstractButton)event.getSource();
        if (pressedButton == btnSearch) {
            
            searchAction();
        }
    }
    /**
     * Method used to search the database with the given query. Called when the
     * "Search" button is pressed or the Enter key pressed.
     */
    public void searchAction() {
        if (searchQuery.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please type something to search, don't be so ignant!??!");
            return;
        }
        Search bar = new Search();
        if (!checkFirstName.isSelected()) {
            bar.searchFirstName(false);
        }
        if (!checkLastName.isSelected()) {
            bar.searchLastName(false);
        }
        if (!checkNickName.isSelected()) {
            bar.searchNickName(false);
        }
        if (!checkDescription.isSelected()) {
            bar.searchDescription(false);
        }
        if (!checkContacts.isSelected()) {
            bar.searchContacts(false);
        }
        if (!checkAddresses.isSelected()) {
            bar.searchAddresses(false);
        }
        ArrayList people = bar.performSearch(searchQuery.getText());
        if (people.size() == 1) {
            try {
                Person singlePerson = new Person(((KeyValue)people.get(0)).getKey());
                parent.showProfile(singlePerson);
            }
            catch (Exception e) {}
        }
        else {
            new JTempFrame(parent, people);
        }
        
        DBHPInterface.printListOfPeopleByLastNameToStdout(people);
        this.dispose();
    }
    
    class SearchQueryListener implements KeyListener {
        public void keyReleased(KeyEvent evt) {}
        public void keyPressed(KeyEvent evt) {
            System.out.println(evt.getKeyCode() + " = " + evt.VK_ENTER);
            if (evt.getKeyCode() == evt.VK_ENTER) {
                searchAction();
            }
        }
        public void keyTyped(KeyEvent evt) {}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JCheckBox checkAddresses;
    private javax.swing.JCheckBox checkContacts;
    private javax.swing.JCheckBox checkDescription;
    private javax.swing.JCheckBox checkFirstName;
    private javax.swing.JCheckBox checkLastName;
    private javax.swing.JCheckBox checkNickName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField searchQuery;
    // End of variables declaration//GEN-END:variables
    
}
